# Generated by Django 2.2.6 on 2019-10-30 14:58

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Company Name', max_length=500)),
                ('address', models.CharField(help_text='Company Address', max_length=1000)),
                ('phone', models.CharField(help_text='Company Phone Number', max_length=10)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'ordering': ['name', 'phone', 'address'],
            },
        ),
        migrations.CreateModel(
            name='FieldsBuilder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_input_id', models.CharField(help_text='Custom input ID', max_length=1000)),
                ('name', models.CharField(help_text='Field Name', max_length=200)),
                ('type', models.CharField(blank=True, choices=[('text', 'Text Field'), ('number', 'Number Field'), ('email', 'Email Field'), ('phone', 'Phone Number Field'), ('radio', 'Radio Field'), ('checkbox', 'Checkbox Field')], default='text', help_text="Specify the type of field you'd like to use", max_length=10)),
            ],
            options={
                'verbose_name': 'Input Generator',
                'verbose_name_plural': 'Input Generator',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email_address', models.EmailField(max_length=200)),
            ],
            options={
                'verbose_name': 'Calculator Meta Owner',
                'verbose_name_plural': 'Calculator Meta Owner',
                'ordering': ['last_name', 'first_name', 'email_address'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a calculator genre (e.g. Basic, Common, Advanced)', max_length=200)),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='First Name', max_length=200)),
                ('last_name', models.CharField(help_text='Last Name', max_length=200)),
                ('email_address', models.CharField(help_text='Email Address', max_length=300)),
                ('phone_number', models.CharField(help_text='Phone Number', max_length=10)),
                ('position', models.CharField(help_text='Job Position', max_length=200, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='library.Company')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['company', 'last_name', 'first_name', 'email_address', 'phone_number'],
            },
        ),
        migrations.CreateModel(
            name='CalculatorLicense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular calculator license', primary_key=True, serialize=False)),
                ('license_created_at', models.DateField(default=django.utils.timezone.now, editable=False, verbose_name='Date License Created On')),
                ('license_expiration', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('m', 'Maintenance'), ('a', 'Available'), ('u', 'Unavailable')], default='m', help_text='License status', max_length=1)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='library.Client')),
                ('meta_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='library.Owner')),
            ],
            options={
                'verbose_name': 'Calculator License',
                'verbose_name_plural': 'Calculator Licenses',
                'ordering': ['license_expiration'],
            },
        ),
        migrations.CreateModel(
            name='Calculator',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Enter a brief description of the calculator', max_length=2000)),
                ('calc_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this calculator', primary_key=True, serialize=False, verbose_name='Calculator ID')),
                ('fields', models.ManyToManyField(to='library.FieldsBuilder')),
            ],
            options={
                'verbose_name': 'Calculator Detail',
                'verbose_name_plural': 'Calculator Details',
            },
        ),
    ]
